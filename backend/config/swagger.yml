swagger: "2.0"
info:
  title: Monopoly
  description: Non-game Web API of Feodal Monopoly project
  version: 1.0.0

host: localhost:3000
basePath: /api/v1
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
security: 
  - Bearer: []
    
paths:
  /boards:
    x-swagger-router-controller: board.controller
    parameters:
      - in: query
        name: filter
        required: false
        type: string
      - in: query
        name: sort
        required: false
        type: array
        collectionFormat: csv
        uniqueItems: true
        items:
          type: string
        minItems: 1
        maxItems: 3
      - in: query
        name: offset
        type: integer
        minimum: 0
        maximum: 10000
        default: 0
      - in: query
        name: limit
        type: integer
        minimum: 1
        maximum: 1000
        default: 1000
    get:
      operationId: getBoards
      summary: Get all available-to-play boards
      description: >
       Returns an array of boards WITHOUT adding functions to cells.
       To do so, get a single board.
      responses:
        200:
          description: OK
        default:
          description: Invalid request
          schema:
            $ref: "#/definitions/Error"
  /boards/{boardId}:
    x-swagger-router-controller: board.controller
    parameters:
      - in: path
        name: boardId
        required: true
        type: string
      - in: query
        name: populate
        required: false
        type: array
        items:
          type: string
        uniqueItems: true
    get:
      operationId: getBoard
      summary: Get board by ObjectId with functions for cells
      description: >
       Returns a board and optionally add functions to cells. It is strongly recommended to download cell function separately because several cells can reference single cell function.
      responses:
        200:
          description: OK
        default:
          description: Invalid request
          schema:
            $ref: "#/definitions/Error"

  /boards/cell-functions/{cellFunctionId}:
    x-swagger-router-controller: cellFunction.controller
    parameters:
      - in: path
        name: cellFunctionId
        required: true
        type: string
      - in: query
        name: populate
        required: false
        type: array
        items:
          type: string
        uniqueItems: true
    get:
      operationId: getCellFunction
      summary: Get cell function by ObjectId and optionally include cell function class object
      responses:
        200:
          description: OK
        default:
          description: Invalid request
          schema:
            $ref: "#/definitions/Error"

  /boards/cell-function-classes/{cellFunctionClassId}:
    x-swagger-router-controller: cellFunctionClass.controller
    parameters:
      - in: path
        name: cellFunctionClassId
        required: true
        type: string
      - in: query
        name: populate
        required: false
        type: array
        items:
          type: string
        uniqueItems: true
    get:
      operationId: getCellFunctionClass
      summary: Get cell function class by ObjectId and optionally include other objects
      responses:
        200:
          description: OK
        default:
          description: Invalid request
          schema:
            $ref: "#/definitions/Error"

  /games:
    x-swagger-router-controller: game.controller
    get:
      operationId: getGames
      summary: Get games according to parameters
      parameters:
        - in: query
          name: filter
          required: false
          type: string
        - in: query
          name: sort
          required: false
          type: array
          collectionFormat: csv
          uniqueItems: true
          items:
            type: string
          minItems: 1
          maxItems: 3
        - in: query
          name: offset
          type: integer
          minimum: 0
          maximum: 10000
          default: 0
        - in: query
          name: limit
          type: integer
          minimum: 1
          maximum: 1000
          default: 1000
      responses:
        200:
          description: OK
        default:
          description: Invalid request
          schema:
            $ref: "#/definitions/Error"
    post:
      operationId: createGame
      parameters:
        - in: body
          name: gameSeed
          schema:
            $ref: "#/definitions/GameSeed"
      responses:
        200:
          description: OK
        default:
          description: Invalid request
          schema:
            $ref: "#/definitions/Error"

  /games/{gameId}:
    x-swagger-router-controller: game.controller
    parameters:
      - in: path
        name: gameId
        required: true
        type: string
    get:
      operationId: getGame
      parameters:
        - in: query
          name: populate
          type: array
          required: false
          items:
            type: string
          uniqueItems: true
          collectionFormat: csv
      responses:
        200:
          description: OK
        default:
          description: Invalid request
          schema:
            $ref: "#/definitions/Error"
    delete:
      operationId: deleteGame
      responses:
        200:
          description: OK
        default:
          description: Invalid request
          schema:
            $ref: "#/definitions/Error"

      

definitions:
  Error:
    properties: 
      message:
        type: string
    required:
      - message
  GameSeed:
    properties:
      boardId:
        type: string
    required:
      - boardId
      